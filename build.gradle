group 'com.github.microcmpt'
version '1.0.2'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}


sourceCompatibility = 1.8

repositories {
    mavenLocal()
    maven { url aliyunMavenUrl }
}

dependencies {
    compile 'org.webjars:webjars-locator:0.31'
    compile 'org.webjars:bootstrap:3.3.7-1'
    compile 'org.webjars:jquery:3.1.1'
    compile 'org.webjars.bower:bootstrap-paginator:1.0.2'
}

task customizeSchedulerDashboardUi {
    copy {
        from("${projectDir}/src/web/images")
        into("${buildDir}/scheduler-dashboard-ui/dist/images")
    }
    delete "${buildDir}/resources"
}

jar {
    from("${projectDir}/src/web/scheduler-ui.html") {
        into "META-INF/resources"
    }

    from("${buildDir}/scheduler-dashboard-ui/dist/") {
        into "META-INF/resources/webjars/scheduler-dashboard-ui/"
        manifest {
            attributes(
                    'Built-By': 'Shen Xia ping',
                    'Created-By': System.properties['java.version'] + " (" + System.properties['java.vendor'] + " " + System.properties['java.vm.version'] + ")",
                    'Specification-Title': project.name,
                    'Specification-Version': project.version,
                    'Implementation-Title': project.name,
                    'Implementation-Version': project.version,
                    "SwaggerUi-Version": project.version,
            )
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            //为Pom文件做数字签名
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            pom.project {
                name project.name
                packaging 'jar'
                description 'Timed task scheduling center web console.'
                url 'https://microcmpt.github.io'

                scm {
                    url 'https://github.com/microcmpt/msa-scheduler-dashboard-ui'
                    connection 'git@github.com:microcmpt/msa-scheduler-dashboard-ui.git'
                    developerConnection 'git@github.com:microcmpt/msa-scheduler-dashboard-ui.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'xiapshen'
                        name 'Shen Xia ping'
                        email '1378127237@qq.com'
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

